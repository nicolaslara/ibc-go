on:
  workflow_call:
    inputs:
      docker-tag:
        description: 'Docker tag being used'
        required: true
        type: string
      test-suite:
        description: 'Test suite to run'
        required: true
        type: string


jobs:
  load-test-matrix:
    outputs:
      test-matrix: ${{ steps.set-test-matrix.outputs.test-matrix }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          # use jq -c to put the full json contents on a single line. This is required when using the json body
          # to create the matrix in the following job.
          test_matrix="$(cat .github/compatibility-test-matrices/${{ inputs.docker-tag }}/${{ inputs.test-suite }}.json | jq -c)"
          echo $test_matrix
          echo "::set-output name=test-matrix::$test_matrix"
        id: set-test-matrix

  e2e:
    runs-on: ubuntu-latest
    needs: load-test-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.load-test-matrix.outputs.test-matrix) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Run e2e Test
        run: |
          cd e2e
          make e2e-test entrypoint=${{ matrix.entrypoint }} test=${{ matrix.test }}
        env:
          # each test has its own set of variables to specify which images are used.
          CHAIN_IMAGE: "${{ matrix.chain-image }}"
          CHAIN_A_TAG: "${{ matrix.chain-a }}"
          CHAIN_B_TAG: "${{ matrix.chain-b }}"
          CHAIN_BINARY: "${{ matrix.chain-binary }}"
          RLY_TAG: "v2.0.0"
